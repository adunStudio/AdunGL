//
// Created by adun on 2017. 11. 29..
//

#include "shader_factory.h"

namespace AdunGL
{
    namespace graphics
    {
        namespace ShaderFactory
        {
#if __APPLE__
            const char* default_shader_vert =
                    "#version 120\n"
                    "\n"
                    "attribute vec4  position;      // location = 0\n"
                    "attribute vec2  uv;            // location = 1\n"
                    "attribute vec2  mask_uv;       // location = 2\n"
                    "attribute float tid;           // location = 3\n"
                    "attribute float mid;           // location = 4\n"
                    "attribute vec4  color;         // location = 5\n"
                    "\n"
                    "uniform mat4 pr_matrix = mat4(1.0);\n"
                    "uniform mat4 vw_matrix = mat4(1.0);\n"
                    "uniform mat4 ml_matrix = mat4(1.0);\n"
                    "\n"
                    "varying vec4  pos;\n"
                    "varying vec2  uvv;\n"
                    "varying vec2  mask_uvv;\n"
                    "varying float tidd;\n"
                    "varying float midd;\n"
                    "varying vec4  coloror;\n"
                    "\n"
                    "\n"
                    "void main(void)\n"
                    "{\n"
                    "    gl_Position = pr_matrix * vw_matrix * ml_matrix * position;\n"
                    "\n"
                    "    pos      = ml_matrix * position;\n"
                    "    uvv      = uv;\n"
                    "    mask_uvv = mask_uv;\n"
                    "    tidd     = tid;\n"
                    "    midd     = mid;\n"
                    "    coloror  = color;\n"
                    "}";

            const char* default_shader_frag =
                    "#version 120\n"
                    "\n"
                    "varying vec4  pos;\n"
                    "varying vec2  uvv;\n"
                    "varying vec2  mask_uvv;\n"
                    "varying float tidd;\n"
                    "varying float midd;\n"
                    "varying vec4  coloror;\n"
                    "\n"
                    "uniform vec4 colour;\n"
                    "uniform vec2 light_pos;\n"
                    "uniform sampler2D textures[32];\n"
                    "\n"
                    "float intensity = 1.0;\n"
                    "\n"
                    "void main(void)\n"
                    "{\n"
                    "float intensity = 3.0 / length(pos.xy - light_pos);\n"
                    "\n"
                    "   vec4 texColor = coloror;\n"
                    "\n"
                    "   vec4 maskColor = vec4(1.0, 1.0, 1.0, 1.0);\n"
                    "\n"
                    "   if(tidd > 0.0)\n"
                    "   {\n"
                    "        int tid = int(tidd);\n"
                    "\n"
                    "        if(tid == 1)\n"
                    "            texColor = coloror * texture2D(textures[0], uvv);\n"
                    "        else if(tid == 2)\n"
                    "            texColor = coloror * texture2D(textures[1], uvv);\n"
                    "        else if(tid == 3)\n"
                    "            texColor = coloror * texture2D(textures[2], uvv);\n"
                    "        else if(tid == 4)\n"
                    "            texColor = coloror * texture2D(textures[3], uvv);\n"
                    "        else if(tid == 5)\n"
                    "            texColor = coloror * texture2D(textures[4], uvv);\n"
                    "        else if(tid == 6)\n"
                    "            texColor = coloror * texture2D(textures[5], uvv);\n"
                    "        else if(tid == 7)\n"
                    "            texColor = coloror * texture2D(textures[6], uvv);\n"
                    "        else if(tid == 8)\n"
                    "            texColor = coloror * texture2D(textures[7], uvv);\n"
                    "        else if(tid == 9)\n"
                    "            texColor = coloror * texture2D(textures[8], uvv);\n"
                    "        else if(tid == 10)\n"
                    "            texColor = coloror * texture2D(textures[9], uvv);\n"
                    "        else if(tid == 11)\n"
                    "            texColor = coloror * texture2D(textures[10], uvv);\n"
                    "        else if(tid == 12)\n"
                    "            texColor = coloror * texture2D(textures[11], uvv);\n"
                    "        else if(tid == 13)\n"
                    "            texColor = coloror * texture2D(textures[12], uvv);\n"
                    "        else if(tid == 14)\n"
                    "            texColor = coloror * texture2D(textures[13], uvv);\n"
                    "        else if(tid == 15)\n"
                    "            texColor = coloror * texture2D(textures[14], uvv);\n"
                    "        else if(tid == 16)\n"
                    "            texColor = coloror * texture2D(textures[15], uvv);\n"
                    "   }\n"
                    "\n"
                    "   if(midd > 0.0)\n"
                    "   {\n"
                    "        int mid = int(midd);\n"
                    "\n"
                    "        if(mid == 1)\n"
                    "            texColor = texColor * texture2D(textures[0], mask_uvv);\n"
                    "        else if(mid == 2)\n"
                    "            texColor = texColor * texture2D(textures[1], mask_uvv);\n"
                    "        else if(mid == 3)\n"
                    "            texColor = texColor * texture2D(textures[2], mask_uvv);\n"
                    "        else if(mid == 4)\n"
                    "            texColor = texColor * texture2D(textures[3], mask_uvv);\n"
                    "        else if(mid == 5)\n"
                    "            texColor = texColor * texture2D(textures[4], mask_uvv);\n"
                    "        else if(mid == 6)\n"
                    "            texColor = texColor * texture2D(textures[5], mask_uvv);\n"
                    "        else if(mid == 7)\n"
                    "            texColor = texColor * texture2D(textures[6], mask_uvv);\n"
                    "        else if(mid == 8)\n"
                    "            texColor = texColor * texture2D(textures[7], mask_uvv);\n"
                    "        else if(mid == 9)\n"
                    "            texColor = texColor * texture2D(textures[8], mask_uvv);\n"
                    "        else if(mid == 10)\n"
                    "            texColor = texColor * texture2D(textures[9], mask_uvv);\n"
                    "        else if(mid == 11)\n"
                    "            texColor = texColor * texture2D(textures[10], mask_uvv);\n"
                    "        else if(mid == 12)\n"
                    "            texColor = texColor * texture2D(textures[11], mask_uvv);\n"
                    "        else if(mid == 13)\n"
                    "            texColor = texColor * texture2D(textures[12], mask_uvv);\n"
                    "        else if(mid == 14)\n"
                    "            texColor = texColor * texture2D(textures[13], mask_uvv);\n"
                    "        else if(mid == 15)\n"
                    "            texColor = texColor * texture2D(textures[14], mask_uvv);\n"
                    "        else if(mid == 16)\n"
                    "            texColor = texColor * texture2D(textures[15], mask_uvv);\n"
                    "   }\n"
                    "\n"
                    "   gl_FragColor = texColor;// * intensity;\n"
                    "}";
#else
            const char* default_shader_vert =
		"#version 330 core\n"
		"\n"
		"layout (location = 0) in vec4 position;\n"
		"layout (location = 1) in vec2 uv;\n"
		"layout (location = 2) in vec2 mask_uv;\n"
		"layout (location = 3) in float tid;\n"
		"layout (location = 4) in float mid;\n"
		"layout (location = 5) in vec4 color;\n"
		"\n"
		"uniform mat4 pr_matrix;\n"
		"uniform mat4 vw_matrix = mat4(1.0);\n"
		"uniform mat4 ml_matrix = mat4(1.0);\n"
		"\n"
		"uniform mat4 mask_matrix;\n"
		"\n"
		"out DATA\n"
		"{\n"
		"	vec4 position;\n"
		"	vec2 uv;\n"
		"	vec2 mask_uv;\n"
		"	float tid;\n"
		"	float mid;\n"
		"	vec4 color;\n"
		"} vs_out;\n"
		"\n"
		"void main()\n"
		"{\n"
		"	gl_Position = pr_matrix * vw_matrix * ml_matrix * position;\n"
		"	vs_out.position = ml_matrix * position;\n"
		"	vs_out.uv = uv;\n"
		"	vs_out.tid = tid;\n"
		"	vs_out.mid = mid;\n"
		"	vs_out.color = color;\n"
		"	vs_out.mask_uv = mask_uv;\n"
		"}\n";

	const char* default_shader_frag =
		"#version 330 core\n"
		"\n"
		"layout (location = 0) out vec4 color;\n"
		"\n"
		"in DATA\n"
		"{\n"
		"	vec4 position;\n"
		"	vec2 uv;\n"
		"	vec2 mask_uv;\n"
		"	float tid;\n"
		"	float mid;\n"
		"	vec4 color;\n"
		"} fs_in;\n"
		"\n"
		"uniform sampler2D textures[32];\n"
		"\n"
		"void main()\n"
		"{\n"
		"	vec4 texColor = fs_in.color;\n"
		"	vec4 maskColor = vec4(1.0, 1.0, 1.0, 1.0);\n"
		"	if (fs_in.tid > 0.0)\n"
		"	{\n"
		"		int tid = int(fs_in.tid - 0.5);\n"
		"		texColor = fs_in.color * texture(textures[tid], fs_in.uv);\n"
		"	}\n"
		"	if (fs_in.mid > 0.0)\n"
		"	{\n"
		"		int mid = int(fs_in.mid - 0.5);\n"
		"		maskColor = texture(textures[mid], fs_in.mask_uv);\n"
		"	}\n"
		"	color = texColor * maskColor; // vec4(1.0 - maskColor.x, 1.0 - maskColor.y, 1.0 - maskColor.z, 1.0);\n"
		"}\n";

#endif



            Shader* DefaultShader()
            {
                return Shader::FromSource("Default Shader", default_shader_vert, default_shader_frag);
            }

        }
    }
}